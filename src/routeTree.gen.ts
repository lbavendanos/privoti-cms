/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedappRouteRouteImport } from './routes/_authenticated/(app)/route'
import { Route as authAuthenticatedRouteRouteImport } from './routes/(auth)/_authenticated/route'
import { Route as AuthenticatedappIndexRouteImport } from './routes/_authenticated/(app)/index'
import { Route as AuthenticatedSettingsProfileRouteImport } from './routes/_authenticated/settings/profile'
import { Route as authPasswordForgotRouteImport } from './routes/(auth)/password.forgot'
import { Route as authAuthenticatedVerifyEmailRouteImport } from './routes/(auth)/_authenticated/verify-email'
import { Route as authAuthenticatedConfirmEmailRouteImport } from './routes/(auth)/_authenticated/confirm-email'
import { Route as AuthenticatedappProductsIndexRouteImport } from './routes/_authenticated/(app)/products/index'
import { Route as AuthenticatedappCustomersIndexRouteImport } from './routes/_authenticated/(app)/customers/index'
import { Route as AuthenticatedappProductsCreateRouteImport } from './routes/_authenticated/(app)/products/create'
import { Route as AuthenticatedappProductsProductIdRouteImport } from './routes/_authenticated/(app)/products/$productId'
import { Route as AuthenticatedappCustomersCustomerIdRouteImport } from './routes/_authenticated/(app)/customers/$customerId'
import { Route as authPasswordResetTokenRouteImport } from './routes/(auth)/password.reset.$token'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedappRouteRoute = AuthenticatedappRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const authAuthenticatedRouteRoute = authAuthenticatedRouteRouteImport.update({
  id: '/(auth)/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedappIndexRoute = AuthenticatedappIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedappRouteRoute,
} as any)
const AuthenticatedSettingsProfileRoute =
  AuthenticatedSettingsProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const authPasswordForgotRoute = authPasswordForgotRouteImport.update({
  id: '/(auth)/password/forgot',
  path: '/password/forgot',
  getParentRoute: () => rootRouteImport,
} as any)
const authAuthenticatedVerifyEmailRoute =
  authAuthenticatedVerifyEmailRouteImport.update({
    id: '/verify-email',
    path: '/verify-email',
    getParentRoute: () => authAuthenticatedRouteRoute,
  } as any)
const authAuthenticatedConfirmEmailRoute =
  authAuthenticatedConfirmEmailRouteImport.update({
    id: '/confirm-email',
    path: '/confirm-email',
    getParentRoute: () => authAuthenticatedRouteRoute,
  } as any)
const AuthenticatedappProductsIndexRoute =
  AuthenticatedappProductsIndexRouteImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => AuthenticatedappRouteRoute,
  } as any)
const AuthenticatedappCustomersIndexRoute =
  AuthenticatedappCustomersIndexRouteImport.update({
    id: '/customers/',
    path: '/customers/',
    getParentRoute: () => AuthenticatedappRouteRoute,
  } as any)
const AuthenticatedappProductsCreateRoute =
  AuthenticatedappProductsCreateRouteImport.update({
    id: '/products/create',
    path: '/products/create',
    getParentRoute: () => AuthenticatedappRouteRoute,
  } as any)
const AuthenticatedappProductsProductIdRoute =
  AuthenticatedappProductsProductIdRouteImport.update({
    id: '/products/$productId',
    path: '/products/$productId',
    getParentRoute: () => AuthenticatedappRouteRoute,
  } as any)
const AuthenticatedappCustomersCustomerIdRoute =
  AuthenticatedappCustomersCustomerIdRouteImport.update({
    id: '/customers/$customerId',
    path: '/customers/$customerId',
    getParentRoute: () => AuthenticatedappRouteRoute,
  } as any)
const authPasswordResetTokenRoute = authPasswordResetTokenRouteImport.update({
  id: '/(auth)/password/reset/$token',
  path: '/password/reset/$token',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/confirm-email': typeof authAuthenticatedConfirmEmailRoute
  '/verify-email': typeof authAuthenticatedVerifyEmailRoute
  '/password/forgot': typeof authPasswordForgotRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/': typeof AuthenticatedappIndexRoute
  '/password/reset/$token': typeof authPasswordResetTokenRoute
  '/customers/$customerId': typeof AuthenticatedappCustomersCustomerIdRoute
  '/products/$productId': typeof AuthenticatedappProductsProductIdRoute
  '/products/create': typeof AuthenticatedappProductsCreateRoute
  '/customers': typeof AuthenticatedappCustomersIndexRoute
  '/products': typeof AuthenticatedappProductsIndexRoute
}
export interface FileRoutesByTo {
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/confirm-email': typeof authAuthenticatedConfirmEmailRoute
  '/verify-email': typeof authAuthenticatedVerifyEmailRoute
  '/password/forgot': typeof authPasswordForgotRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/': typeof AuthenticatedappIndexRoute
  '/password/reset/$token': typeof authPasswordResetTokenRoute
  '/customers/$customerId': typeof AuthenticatedappCustomersCustomerIdRoute
  '/products/$productId': typeof AuthenticatedappProductsProductIdRoute
  '/products/create': typeof AuthenticatedappProductsCreateRoute
  '/customers': typeof AuthenticatedappCustomersIndexRoute
  '/products': typeof AuthenticatedappProductsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/_authenticated': typeof authAuthenticatedRouteRouteWithChildren
  '/_authenticated/(app)': typeof AuthenticatedappRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/_authenticated/confirm-email': typeof authAuthenticatedConfirmEmailRoute
  '/(auth)/_authenticated/verify-email': typeof authAuthenticatedVerifyEmailRoute
  '/(auth)/password/forgot': typeof authPasswordForgotRoute
  '/_authenticated/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/_authenticated/(app)/': typeof AuthenticatedappIndexRoute
  '/(auth)/password/reset/$token': typeof authPasswordResetTokenRoute
  '/_authenticated/(app)/customers/$customerId': typeof AuthenticatedappCustomersCustomerIdRoute
  '/_authenticated/(app)/products/$productId': typeof AuthenticatedappProductsProductIdRoute
  '/_authenticated/(app)/products/create': typeof AuthenticatedappProductsCreateRoute
  '/_authenticated/(app)/customers/': typeof AuthenticatedappCustomersIndexRoute
  '/_authenticated/(app)/products/': typeof AuthenticatedappProductsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/settings'
    | '/login'
    | '/confirm-email'
    | '/verify-email'
    | '/password/forgot'
    | '/settings/profile'
    | '/'
    | '/password/reset/$token'
    | '/customers/$customerId'
    | '/products/$productId'
    | '/products/create'
    | '/customers'
    | '/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/settings'
    | '/login'
    | '/confirm-email'
    | '/verify-email'
    | '/password/forgot'
    | '/settings/profile'
    | '/'
    | '/password/reset/$token'
    | '/customers/$customerId'
    | '/products/$productId'
    | '/products/create'
    | '/customers'
    | '/products'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/_authenticated'
    | '/_authenticated/(app)'
    | '/_authenticated/settings'
    | '/(auth)/login'
    | '/(auth)/_authenticated/confirm-email'
    | '/(auth)/_authenticated/verify-email'
    | '/(auth)/password/forgot'
    | '/_authenticated/settings/profile'
    | '/_authenticated/(app)/'
    | '/(auth)/password/reset/$token'
    | '/_authenticated/(app)/customers/$customerId'
    | '/_authenticated/(app)/products/$productId'
    | '/_authenticated/(app)/products/create'
    | '/_authenticated/(app)/customers/'
    | '/_authenticated/(app)/products/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authAuthenticatedRouteRoute: typeof authAuthenticatedRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authPasswordForgotRoute: typeof authPasswordForgotRoute
  authPasswordResetTokenRoute: typeof authPasswordResetTokenRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/(app)': {
      id: '/_authenticated/(app)'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedappRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(auth)/_authenticated': {
      id: '/(auth)/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authAuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/(app)/': {
      id: '/_authenticated/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedappIndexRouteImport
      parentRoute: typeof AuthenticatedappRouteRoute
    }
    '/_authenticated/settings/profile': {
      id: '/_authenticated/settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AuthenticatedSettingsProfileRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/(auth)/password/forgot': {
      id: '/(auth)/password/forgot'
      path: '/password/forgot'
      fullPath: '/password/forgot'
      preLoaderRoute: typeof authPasswordForgotRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/_authenticated/verify-email': {
      id: '/(auth)/_authenticated/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof authAuthenticatedVerifyEmailRouteImport
      parentRoute: typeof authAuthenticatedRouteRoute
    }
    '/(auth)/_authenticated/confirm-email': {
      id: '/(auth)/_authenticated/confirm-email'
      path: '/confirm-email'
      fullPath: '/confirm-email'
      preLoaderRoute: typeof authAuthenticatedConfirmEmailRouteImport
      parentRoute: typeof authAuthenticatedRouteRoute
    }
    '/_authenticated/(app)/products/': {
      id: '/_authenticated/(app)/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthenticatedappProductsIndexRouteImport
      parentRoute: typeof AuthenticatedappRouteRoute
    }
    '/_authenticated/(app)/customers/': {
      id: '/_authenticated/(app)/customers/'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof AuthenticatedappCustomersIndexRouteImport
      parentRoute: typeof AuthenticatedappRouteRoute
    }
    '/_authenticated/(app)/products/create': {
      id: '/_authenticated/(app)/products/create'
      path: '/products/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof AuthenticatedappProductsCreateRouteImport
      parentRoute: typeof AuthenticatedappRouteRoute
    }
    '/_authenticated/(app)/products/$productId': {
      id: '/_authenticated/(app)/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof AuthenticatedappProductsProductIdRouteImport
      parentRoute: typeof AuthenticatedappRouteRoute
    }
    '/_authenticated/(app)/customers/$customerId': {
      id: '/_authenticated/(app)/customers/$customerId'
      path: '/customers/$customerId'
      fullPath: '/customers/$customerId'
      preLoaderRoute: typeof AuthenticatedappCustomersCustomerIdRouteImport
      parentRoute: typeof AuthenticatedappRouteRoute
    }
    '/(auth)/password/reset/$token': {
      id: '/(auth)/password/reset/$token'
      path: '/password/reset/$token'
      fullPath: '/password/reset/$token'
      preLoaderRoute: typeof authPasswordResetTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthenticatedappRouteRouteChildren {
  AuthenticatedappIndexRoute: typeof AuthenticatedappIndexRoute
  AuthenticatedappCustomersCustomerIdRoute: typeof AuthenticatedappCustomersCustomerIdRoute
  AuthenticatedappProductsProductIdRoute: typeof AuthenticatedappProductsProductIdRoute
  AuthenticatedappProductsCreateRoute: typeof AuthenticatedappProductsCreateRoute
  AuthenticatedappCustomersIndexRoute: typeof AuthenticatedappCustomersIndexRoute
  AuthenticatedappProductsIndexRoute: typeof AuthenticatedappProductsIndexRoute
}

const AuthenticatedappRouteRouteChildren: AuthenticatedappRouteRouteChildren = {
  AuthenticatedappIndexRoute: AuthenticatedappIndexRoute,
  AuthenticatedappCustomersCustomerIdRoute:
    AuthenticatedappCustomersCustomerIdRoute,
  AuthenticatedappProductsProductIdRoute:
    AuthenticatedappProductsProductIdRoute,
  AuthenticatedappProductsCreateRoute: AuthenticatedappProductsCreateRoute,
  AuthenticatedappCustomersIndexRoute: AuthenticatedappCustomersIndexRoute,
  AuthenticatedappProductsIndexRoute: AuthenticatedappProductsIndexRoute,
}

const AuthenticatedappRouteRouteWithChildren =
  AuthenticatedappRouteRoute._addFileChildren(
    AuthenticatedappRouteRouteChildren,
  )

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsProfileRoute: typeof AuthenticatedSettingsProfileRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsProfileRoute: AuthenticatedSettingsProfileRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedappRouteRoute: typeof AuthenticatedappRouteRouteWithChildren
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedappRouteRoute: AuthenticatedappRouteRouteWithChildren,
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface authAuthenticatedRouteRouteChildren {
  authAuthenticatedConfirmEmailRoute: typeof authAuthenticatedConfirmEmailRoute
  authAuthenticatedVerifyEmailRoute: typeof authAuthenticatedVerifyEmailRoute
}

const authAuthenticatedRouteRouteChildren: authAuthenticatedRouteRouteChildren =
  {
    authAuthenticatedConfirmEmailRoute: authAuthenticatedConfirmEmailRoute,
    authAuthenticatedVerifyEmailRoute: authAuthenticatedVerifyEmailRoute,
  }

const authAuthenticatedRouteRouteWithChildren =
  authAuthenticatedRouteRoute._addFileChildren(
    authAuthenticatedRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authAuthenticatedRouteRoute: authAuthenticatedRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authPasswordForgotRoute: authPasswordForgotRoute,
  authPasswordResetTokenRoute: authPasswordResetTokenRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
